{"version":3,"sources":["PicOne.svg","me.jpg","key.svg","IconSearch.svg","serviceWorker.js","App.js","PlayList.js","RouterComponent.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","GlobalStyles","createGlobalStyle","Djoom","styled","div","ContentLeft","ContentRight","TextApp","p","Underline","Click","a","KeyStyle","img","App","href","src","Key","DjoomFont","GroupSearch","Search","input","IconSearchStyle","PlayListStyled","List","Image","Detail","SongName","Artists","GoupOfTime","MinuteStyle","TimeBar","Me","PlayList","placeholder","IconSearch","PictureOne","Profile","RouterComponent","exact","path","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,gC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,qJCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,+0FCbN,IAAMC,EAAeC,YAAH,KAOZC,EAAQC,IAAOC,IAAV,KAYLC,EAAcF,IAAOC,IAAV,KAIXE,EAAeH,IAAOC,IAAV,KAKZG,EAAUJ,IAAOK,EAAV,KAqBPC,EAAYN,IAAOC,IAAV,KA2BTM,EAAQP,IAAOQ,EAAV,KA6BLC,EAAWT,IAAOU,IAAV,KAmCCC,EAjBF,WACX,OACC,kBAACZ,EAAD,KACE,kBAACF,EAAD,MACA,kBAACK,EAAD,KACE,kBAACE,EAAD,cACA,kBAACE,EAAD,MACA,kBAACC,EAAD,CAAOK,KAAK,6QAAZ,SACA,kBAACN,EAAD,OAEF,kBAACH,EAAD,KACE,kBAACM,EAAD,CAAUI,IAAKC,S,y9HCrItB,IAAMf,EAAQC,IAAOC,IAAV,KAQLc,EAAaf,IAAOK,EAAX,KAOTW,EAAchB,IAAOC,IAAV,KAKXgB,GAASjB,IAAOkB,MAAV,KAoBNC,GAAkBnB,IAAOU,IAAV,KAafU,GAAiBpB,IAAOC,IAAV,KAOdoB,GAAOrB,IAAOC,IAAV,KAkBJqB,GAAQtB,IAAOU,IAAV,KAYLa,GAASvB,IAAOC,IAAV,KAUNuB,GAAWxB,IAAOK,EAAV,KAYRoB,GAAUzB,IAAOK,EAAV,KAYPqB,GAAa1B,IAAOC,IAAV,KAKV0B,GAAc3B,IAAOK,EAAV,KAYVuB,GAAU5B,IAAOC,IAAV,KASR4B,GAAK7B,IAAOU,IAAV,KA+DOoB,GAnDE,WACb,OACI,kBAAC,EAAD,KACI,kBAACf,EAAD,cACI,kBAACC,EAAD,KACI,kBAACC,GAAD,CAAQc,YAAY,mCACpB,kBAACZ,GAAD,CAAiBN,IAAKmB,OAE9B,kBAACZ,GAAD,kBACA,kBAACC,GAAD,KACI,kBAACC,GAAD,CAAOT,IAAKoB,MACZ,kBAACV,GAAD,KACI,kBAACC,GAAD,mDACA,kBAACC,GAAD,+DACA,kBAACC,GAAD,KACI,kBAACC,GAAD,cACA,kBAACC,GAAD,MACA,kBAACD,GAAD,gBAGR,kBAACE,GAAD,CAAIhB,IAAKqB,OAEb,kBAACb,GAAD,KACI,kBAACC,GAAD,CAAOT,IAAKoB,MACZ,kBAACV,GAAD,KACI,kBAACC,GAAD,mDACA,kBAACC,GAAD,+DACA,kBAACC,GAAD,KACI,kBAACC,GAAD,cACA,kBAACC,GAAD,MACA,kBAACD,GAAD,gBAGR,kBAACE,GAAD,CAAIhB,IAAKqB,OAEb,kBAACb,GAAD,KACI,kBAACC,GAAD,CAAOT,IAAKoB,MACZ,kBAACV,GAAD,KACI,kBAACC,GAAD,mDACA,kBAACC,GAAD,+DACA,kBAACC,GAAD,KACI,kBAACC,GAAD,cACA,kBAACC,GAAD,MACA,kBAACD,GAAD,gBAGR,kBAACE,GAAD,CAAIhB,IAAKqB,SCpMVC,GAbS,WACpB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aACd,kBAAC,GAAD,SCLhBC,IAASC,OAAO,kBAAC,IAAD,KAAe,kBAAC,GAAD,OAAoCC,SAASC,eAAe,SJ4HrF,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.ebb0e55f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PicOne.c01ee39d.svg\";","module.exports = __webpack_public_path__ + \"static/media/me.e4eaef0e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/key.388dca2e.svg\";","module.exports = __webpack_public_path__ + \"static/media/IconSearch.badfcfc6.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport styled ,{ createGlobalStyle } from 'styled-components'\nimport Key from './key.svg'\n\n\nconst GlobalStyles = createGlobalStyle`\n   body {\n     margin: 0 auto;\n     width: 100%;\n   }\n`\n\nconst Djoom = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  margin: 0;\n  /* background: linear-gradient(180deg, rgba(49, 9, 59, 0.9) 99.96%, rgba(87, 75, 144, 0) 99.97%, rgba(80, 18, 98, 0.867188) 99.98%, rgba(52, 14, 65, 0.834375) 99.99%);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25); */\n  background-image: linear-gradient(45deg, #874da2 0%, #c43a30 100%);\n`\n\nconst ContentLeft = styled.div`\n  margin-left: 3rem;\n`\n\nconst ContentRight = styled.div`\n  margin-top: 7.5rem;\n`\n\n\nconst TextApp = styled.p`\n  font-size: 3rem;\n  font-weight: normal;\n  font-family: Pacifico;\n  color: #FFC312;\n  margin: 0;\n  position :relative;\n  animation: mymovetext 2s;\n  @keyframes mymovetext {\n    from {left: -200px;}\n    to {left: 0px;}\n  }\n  @media only screen and (min-width: 1280px) {\n      font-size: 5rem;\n      font-weight: normal;\n      font-family: Pacifico;\n      color: #FFC312;\n      margin: 0;\n  }\n`\n\nconst Underline = styled.div`\n  height: 0.5rem;\n  width: 8rem;\n  :last-child{\n    width: 4rem;\n    margin: 2rem 0 0 0;\n  }\n  background-color: rgba(206, 214, 224, 0.75);\n  border-radius: 5rem;\n  margin: 0.25rem 0 0 0;\n  position :relative;\n  animation: mymovetext 2s;\n  @keyframes mymovetext {\n    from {left: -200px;}\n    to {left: 0px;}\n  }\n\n  @media only screen and (min-width: 1280px) {\n    height: 0.5rem;\n    width: 13.5rem;\n    :last-child{\n      width: 8rem;\n      margin-top: 2rem;\n    }\n  }\n`\n\nconst Click = styled.a`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: #F7D794;\n  border: 0.4rem solid #F7B731;\n  border-radius: 0.5rem;\n  height: 2rem;\n  width: 6rem;\n  margin: 2rem 0 0 0;\n  font-family: Pacifico;\n  position :relative;\n  animation: mymovetext 2s;\n  color: #31093B;\n  text-decoration:none;\n  @keyframes mymovetext {\n    from {left: -200px;}\n    to {left: 0px;}\n  }\n  cursor: pointer;\n  :hover{\n    background: #FFC312;\n  }\n  @media only screen and (min-width: 1280px) {\n    height: 2rem;\n    width: 10rem;\n  }\n`\n\nconst KeyStyle = styled.img`\n  width: 12rem;\n  height: 17rem;\n  margin-left: -4rem;\n  position :relative;\n  animation: mymove 2s;\n  @keyframes mymove {\n    from {top: -200px;}\n    to {top: 0px;}\n  }\n  @media only screen and (min-width: 1280px) {\n    width: 15rem;\n    height: 17rem;\n    margin-left: -5rem;\n  }\n`\n\n\nconst  App = () =>{\n  return (\n   <Djoom>\n     <GlobalStyles/>\n     <ContentLeft>\n       <TextApp>Djoom</TextApp>\n       <Underline/>\n       <Click href=\"https://accounts.spotify.com/en/login?continue=https:%2F%2Faccounts.spotify.com%2Fauthorize%3Fscope%3Dplaylist-modify-public%26response_type%3Dcode%26redirect_uri%3Dhttps%253A%252F%252Fgithub.com%252Faslupin%252FOnQoon%26client_id%3D58661c1cb472432ea8949f217665ccc5\">Click</Click>\n       <Underline/>\n     </ContentLeft>\n     <ContentRight>\n       <KeyStyle src={Key}/>\n     </ContentRight>\n   </Djoom>\n  )\n}\n\nexport default App;\n","import React from \"react\"\nimport styled from 'styled-components'\nimport PictureOne from './PicOne.svg'\nimport Profile from './me.jpg'\nimport IconSearch from './IconSearch.svg'\n\nconst Djoom = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: 100vh;\n    background: linear-gradient(180.09deg, #03707C -0.43%, rgba(189, 229, 249, 0) 80.28%, rgba(255, 255, 255, 0) 99.94%), #97372F;\n`\n\nconst DjoomFont =  styled.p`\n    font-family: Pacifico;\n    color:#F7B731;\n    font-size: 3rem;\n    margin: 2rem 0 1rem 0;\n`\n\nconst GroupSearch = styled.div`\n    position: relative;\n`\n\n\nconst Search = styled.input`\n    display: flex;\n    height: 2rem;\n    width: 90vw;\n    border-radius: 10px;\n    background: rgba(206, 214, 224, 0.05);\n    color: #E5E5E5;\n    border: 3px solid #20B2AA;\n    box-sizing: border-box;\n    padding: 0.05rem 0.5rem 0.05rem 0.5rem;\n    margin: 0;\n    ::placeholder {\n        color: #bcc4c1;\n    }\n    @media only screen and (min-width: 768px) {\n        width: 35rem;\n        height: 2.5rem;\n    }\n`\n\nconst IconSearchStyle = styled.img`\n    width: 1.5rem;\n    height: 1.5rem;\n    top: 0.3rem;\n    right: 0.6rem;\n    cursor: pointer;\n    position: absolute;\n    @media only screen and (min-width: 768px) {\n        top: 0.5rem;\n        right: 0.5rem;\n    }\n`\n\nconst PlayListStyled = styled.div`\n    font-family: Pacifico;\n    font-size: 1.25rem;\n    color:#F7B731;\n    margin: 2rem 0 2rem 0;\n`\n\nconst List = styled.div`\n    display: flex;\n    align-items: center;\n    width: 90%;\n    max-width: 35rem;\n    height: 30rem;\n    border-radius: 10px;\n    border: 3px solid #20B2AA;\n    box-sizing: border-box;\n    margin-bottom: 3rem;\n    padding: 0.5rem;\n    position: relative;\n    @media only screen and (min-width: 768px) {\n        padding: 1rem;\n        height: 12rem;\n    }\n`\n\nconst Image = styled.img`\n    width: 20vh;\n    height: 10vh;\n    border-radius: 5px;\n    margin-right: 1rem;\n    @media only screen and (min-width: 768px) {\n        height: 6rem;\n        width: 12rem;\n        margin-right: 2rem;\n    }\n`\n\nconst Detail = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items:center;\n    justify-content: center;\n    width: 50%;\n    height: 100%;\n    padding: 0;\n`\n\nconst SongName = styled.p`\n    font-family: Kanit;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 1.5rem;\n    color: #E5E5E5;\n    margin: 0 0 0.3rem 0 ;\n    @media only screen and (min-width: 768px) {\n        font-size: 2rem;\n    }\n`\n\nconst Artists = styled.p`\n    font-family: Kanit;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 0.6rem;\n    color: #E5E5E5;\n    margin: 0 0 0.4rem 0;\n    @media only screen and (min-width: 768px) {\n        font-size: 1rem;\n    }\n`\n\nconst GoupOfTime = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nconst MinuteStyle = styled.p`\n    font-family: Pacifico;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 11px;\n    color: #FFC312;\n    margin: 0;\n    @media only screen and (min-width: 768px) {\n        font-size: 0.9rem;\n    }\n`\n\nconst  TimeBar = styled.div`\n    border: 1px solid #872C24;\n    width: 5.75rem;\n    margin: 0.1rem 0.25rem 0 0.25rem;\n    @media only screen and (min-width: 768px) {\n        width: 12vw;\n    }\n`\n\nconst Me = styled.img`\n    position: absolute;\n    height: 1.25rem;\n    width: 1.5rem;\n    border-radius: 50%;\n    border: 1px solid #20B2AA;\n    box-sizing: border-box;\n    top: 0.5rem;\n    right: 0.5rem;\n`\n\n\nconst PlayList = () => {\n    return(\n        <Djoom>\n            <DjoomFont>Djoom</DjoomFont>\n                <GroupSearch>\n                    <Search placeholder=\"Songs, Artists, Lyrics, Albums\"/>\n                    <IconSearchStyle src={IconSearch}/>\n                </GroupSearch>\n            <PlayListStyled>PlayLists</PlayListStyled>\n            <List>\n                <Image src={PictureOne}/>\n                <Detail>\n                    <SongName>ชานชาลา</SongName>\n                    <Artists>นิเทศจุฬา</Artists>\n                    <GoupOfTime>\n                        <MinuteStyle>00.00</MinuteStyle>\n                        <TimeBar/>\n                        <MinuteStyle>04.30</MinuteStyle>\n                    </GoupOfTime>\n                </Detail>\n                <Me src={Profile}/>\n            </List>\n            <List>\n                <Image src={PictureOne}/>\n                <Detail>\n                    <SongName>ชานชาลา</SongName>\n                    <Artists>นิเทศจุฬา</Artists>\n                    <GoupOfTime>\n                        <MinuteStyle>00.00</MinuteStyle>\n                        <TimeBar/>\n                        <MinuteStyle>04.30</MinuteStyle>\n                    </GoupOfTime>\n                </Detail>\n                <Me src={Profile}/>\n            </List>\n            <List>\n                <Image src={PictureOne}/>\n                <Detail>\n                    <SongName>ชานชาลา</SongName>\n                    <Artists>นิเทศจุฬา</Artists>\n                    <GoupOfTime>\n                        <MinuteStyle>00.00</MinuteStyle>\n                        <TimeBar/>\n                        <MinuteStyle>04.30</MinuteStyle>\n                    </GoupOfTime>\n                </Detail>\n                <Me src={Profile}/>\n            </List>\n        </Djoom>\n    )\n}\nexport default PlayList","import React from 'react'\nimport { Switch, Route} from \"react-router-dom\"\nimport App from './App'\nimport PlayList from './PlayList'\n\nconst RouterComponent = () => {\n    return (\n        <Switch>\n            <Route exact path=\"/\">\n                <App />\n            </Route>\n            <Route exact path=\"/playlist\">\n                <PlayList />\n            </Route>\n        </Switch>\n    )\n}\n\nexport default RouterComponent","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {BrowserRouter} from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\nimport RouterComponent from './RouterComponent'\n\nReactDOM.render(<BrowserRouter><RouterComponent/></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}